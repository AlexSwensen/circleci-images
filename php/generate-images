#!/bin/bash

NAME=PHP
BASE_REPO=php
VARIANTS=(browsers node node-browsers)

IMAGE_CUSTOMIZATIONS=$(cat <<'EOF'

# Install composer
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('SHA384', 'composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php && \
    php -r "unlink('composer-setup.php');" && \
    mv composer.phar /usr/local/bin/composer

RUN pecl install xdebug && mkdir -p /etc/php && echo 'zend_extension="/usr/local/lib/php/extensions/no-debug-non-zts-20160303/xdebug.so"' > /etc/php/xdebug.ini

EOF
)

function generate_node_variant() {
  DESIRED_NODE_TAG=$1

  cat <<'EOF'
#
# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED
#

FROM {{BASE_IMAGE}}

# node installations command expect to run as root
USER root
EOF

  NODE_MANIFEST_INFO=$(curl https://raw.githubusercontent.com/docker-library/official-images/master/library/node |grep -A2 $DESIRED_NODE_TAG)
  NODE_GIT_COMMIT=$(printf "%s\n" "${NODE_MANIFEST_INFO}" | grep GitCommit | awk '{print $2;}')
  NODE_DIRECTORY=$(printf "%s\n" "${NODE_MANIFEST_INFO}" | grep Directory | awk '{print $2;}')
  
  NODE_DOCKERFILE_URL="https://raw.githubusercontent.com/nodejs/docker-node/${NODE_GIT_COMMIT}/${NODE_DIRECTORY}/Dockerfile"
  echo "## Using node installation from $NODE_DOCKERFILE_URL"
  curl -sSL $NODE_DOCKERFILE_URL | grep -v -e '^FROM buildpack-deps:jessie' -e '^CMD'

  echo ''
  echo 'USER circleci'
}

function generate_node_browser_variant() {
  printf "#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\n"
  echo 'FROM {{BASE_IMAGE}}-node'
  cat ../shared/images/Dockerfile-browsers.template | grep -v '^FROM'
}

mkdir -p resources
generate_node_variant "latest" > resources/Dockerfile-node.template
generate_node_browser_variant > resources/Dockerfile-node-browsers.template
